
Adc.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000a1e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009ca  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000a1e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a50  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000a90  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000030e  00000000  00000000  00000ae0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001ba  00000000  00000000  00000dee  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001b2  00000000  00000000  00000fa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000c8  00000000  00000000  0000115c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000201  00000000  00000000  00001224  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000341  00000000  00000000  00001425  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00001766  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 75 00 	jmp	0xea	; 0xea <__ctors_end>
   4:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
   8:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
   c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  10:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  14:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  18:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  1c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  20:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  24:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  28:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  2c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  30:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  34:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  38:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  3c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  40:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  44:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  48:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  4c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  50:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  54:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  58:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  5c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  60:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  64:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  68:	07 63       	ori	r16, 0x37	; 55
  6a:	42 36       	cpi	r20, 0x62	; 98
  6c:	b7 9b       	sbis	0x16, 7	; 22
  6e:	d8 a7       	std	Y+40, r29	; 0x28
  70:	1a 39       	cpi	r17, 0x9A	; 154
  72:	68 56       	subi	r22, 0x68	; 104
  74:	18 ae       	std	Y+56, r1	; 0x38
  76:	ba ab       	std	Y+50, r27	; 0x32
  78:	55 8c       	ldd	r5, Z+29	; 0x1d
  7a:	1d 3c       	cpi	r17, 0xCD	; 205
  7c:	b7 cc       	rjmp	.-1682   	; 0xfffff9ec <__eeprom_end+0xff7ef9ec>
  7e:	57 63       	ori	r21, 0x37	; 55
  80:	bd 6d       	ori	r27, 0xDD	; 221
  82:	ed fd       	.word	0xfded	; ????
  84:	75 3e       	cpi	r23, 0xE5	; 229
  86:	f6 17       	cp	r31, r22
  88:	72 31       	cpi	r23, 0x12	; 18
  8a:	bf 00       	.word	0x00bf	; ????
  8c:	00 00       	nop
  8e:	80 3f       	cpi	r24, 0xF0	; 240
  90:	08 00       	.word	0x0008	; ????
  92:	00 00       	nop
  94:	be 92       	st	-X, r11
  96:	24 49       	sbci	r18, 0x94	; 148
  98:	12 3e       	cpi	r17, 0xE2	; 226
  9a:	ab aa       	std	Y+51, r10	; 0x33
  9c:	aa 2a       	or	r10, r26
  9e:	be cd       	rjmp	.-1156   	; 0xfffffc1c <__eeprom_end+0xff7efc1c>
  a0:	cc cc       	rjmp	.-1640   	; 0xfffffa3a <__eeprom_end+0xff7efa3a>
  a2:	4c 3e       	cpi	r20, 0xEC	; 236
  a4:	00 00       	nop
  a6:	00 80       	ld	r0, Z
  a8:	be ab       	std	Y+54, r27	; 0x36
  aa:	aa aa       	std	Y+50, r10	; 0x32
  ac:	aa 3e       	cpi	r26, 0xEA	; 234
  ae:	00 00       	nop
  b0:	00 00       	nop
  b2:	bf 00       	.word	0x00bf	; ????
  b4:	00 00       	nop
  b6:	80 3f       	cpi	r24, 0xF0	; 240
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	00 08       	sbc	r0, r0
  be:	41 78       	andi	r20, 0x81	; 129
  c0:	d3 bb       	out	0x13, r29	; 19
  c2:	43 87       	std	Z+11, r20	; 0x0b
  c4:	d1 13       	cpse	r29, r17
  c6:	3d 19       	sub	r19, r13
  c8:	0e 3c       	cpi	r16, 0xCE	; 206
  ca:	c3 bd       	out	0x23, r28	; 35
  cc:	42 82       	std	Z+2, r4	; 0x02
  ce:	ad 2b       	or	r26, r29
  d0:	3e 68       	ori	r19, 0x8E	; 142
  d2:	ec 82       	std	Y+4, r14	; 0x04
  d4:	76 be       	out	0x36, r7	; 54
  d6:	d9 8f       	std	Y+25, r29	; 0x19
  d8:	e1 a9       	ldd	r30, Z+49	; 0x31
  da:	3e 4c       	sbci	r19, 0xCE	; 206
  dc:	80 ef       	ldi	r24, 0xF0	; 240
  de:	ff be       	out	0x3f, r15	; 63
  e0:	01 c4       	rjmp	.+2050   	; 0x8e4 <log+0x32>
  e2:	ff 7f       	andi	r31, 0xFF	; 255
  e4:	3f 00       	.word	0x003f	; ????
  e6:	00 00       	nop
	...

000000ea <__ctors_end>:
  ea:	11 24       	eor	r1, r1
  ec:	1f be       	out	0x3f, r1	; 63
  ee:	cf ef       	ldi	r28, 0xFF	; 255
  f0:	d8 e0       	ldi	r29, 0x08	; 8
  f2:	de bf       	out	0x3e, r29	; 62
  f4:	cd bf       	out	0x3d, r28	; 61
  f6:	0e 94 3a 01 	call	0x274	; 0x274 <main>
  fa:	0c 94 e3 04 	jmp	0x9c6	; 0x9c6 <_exit>

000000fe <__bad_interrupt>:
  fe:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000102 <USART0Init>:
#define UBRR_VALUE (((F_CPU / (USART_BAUDRATE * 16UL))) - 1)
#define POT 50

void USART0Init(void) {
	// Set baud rate
	UBRR0H = (uint8_t)(UBRR_VALUE>>8);
 102:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = (uint8_t)UBRR_VALUE;
 106:	87 e6       	ldi	r24, 0x67	; 103
 108:	80 93 c4 00 	sts	0x00C4, r24
	
	// Set frame format to 8 data bits, no parity, 1 stop bit
	UCSR0C |= (1<<UCSZ01)|(1<<UCSZ00);
 10c:	e2 ec       	ldi	r30, 0xC2	; 194
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	80 81       	ld	r24, Z
 112:	86 60       	ori	r24, 0x06	; 6
 114:	80 83       	st	Z, r24
	
	//enable transmission and reception
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
 116:	e1 ec       	ldi	r30, 0xC1	; 193
 118:	f0 e0       	ldi	r31, 0x00	; 0
 11a:	80 81       	ld	r24, Z
 11c:	88 61       	ori	r24, 0x18	; 24
 11e:	80 83       	st	Z, r24
 120:	08 95       	ret

00000122 <USART0SendByte>:
}

int USART0SendByte(uint8_t data) {
	//wait while previous byte is completed
	while(!(UCSR0A&(1<<UDRE0))){};
 122:	e0 ec       	ldi	r30, 0xC0	; 192
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	90 81       	ld	r25, Z
 128:	95 ff       	sbrs	r25, 5
 12a:	fd cf       	rjmp	.-6      	; 0x126 <USART0SendByte+0x4>
	
	// Transmit data
	UDR0 = data;
 12c:	80 93 c6 00 	sts	0x00C6, r24
	return 0;
}
 130:	80 e0       	ldi	r24, 0x00	; 0
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	08 95       	ret

00000136 <USART0TransmitNumber>:

void USART0TransmitNumber(double value) {
 136:	cf 92       	push	r12
 138:	df 92       	push	r13
 13a:	ef 92       	push	r14
 13c:	ff 92       	push	r15
 13e:	1f 93       	push	r17
 140:	cf 93       	push	r28
 142:	df 93       	push	r29
 144:	6b 01       	movw	r12, r22
 146:	7c 01       	movw	r14, r24
	uint8_t digit;
	digit = (uint8_t)value / 10;
 148:	0e 94 34 02 	call	0x468	; 0x468 <__fixunssfsi>
 14c:	16 2f       	mov	r17, r22
 14e:	cd ec       	ldi	r28, 0xCD	; 205
 150:	6c 9f       	mul	r22, r28
 152:	d1 2d       	mov	r29, r1
 154:	11 24       	eor	r1, r1
 156:	d6 95       	lsr	r29
 158:	d6 95       	lsr	r29
 15a:	d6 95       	lsr	r29
	digit |= (1 << 6);
	digit |= (1 << 5);
	digit &=~ (1 << 4);
 15c:	8d 2f       	mov	r24, r29
 15e:	8f 7e       	andi	r24, 0xEF	; 239
	USART0SendByte(digit);
 160:	80 66       	ori	r24, 0x60	; 96
 162:	0e 94 91 00 	call	0x122	; 0x122 <USART0SendByte>
	
	digit = (uint8_t)value % 10;
 166:	dd 0f       	add	r29, r29
 168:	8d 2f       	mov	r24, r29
 16a:	88 0f       	add	r24, r24
 16c:	88 0f       	add	r24, r24
 16e:	d8 0f       	add	r29, r24
 170:	81 2f       	mov	r24, r17
 172:	8d 1b       	sub	r24, r29
	digit |= (1 << 6);
	digit &=~ (1 << 5);
 174:	8f 7d       	andi	r24, 0xDF	; 223
	digit |= (1 << 4);
	USART0SendByte(digit);
 176:	80 65       	ori	r24, 0x50	; 80
 178:	0e 94 91 00 	call	0x122	; 0x122 <USART0SendByte>
	
	value *= 10;
 17c:	20 e0       	ldi	r18, 0x00	; 0
 17e:	30 e0       	ldi	r19, 0x00	; 0
 180:	40 e2       	ldi	r20, 0x20	; 32
 182:	51 e4       	ldi	r21, 0x41	; 65
 184:	c7 01       	movw	r24, r14
 186:	b6 01       	movw	r22, r12
 188:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__mulsf3>
	digit = (uint8_t)value % 10;
 18c:	0e 94 34 02 	call	0x468	; 0x468 <__fixunssfsi>
 190:	6c 9f       	mul	r22, r28
 192:	c1 2d       	mov	r28, r1
 194:	11 24       	eor	r1, r1
 196:	c6 95       	lsr	r28
 198:	c6 95       	lsr	r28
 19a:	c6 95       	lsr	r28
 19c:	cc 0f       	add	r28, r28
 19e:	8c 2f       	mov	r24, r28
 1a0:	88 0f       	add	r24, r24
 1a2:	88 0f       	add	r24, r24
 1a4:	c8 0f       	add	r28, r24
 1a6:	6c 1b       	sub	r22, r28
	digit &=~ (1 << 6);
	digit |= (1 << 5);
	digit &=~ (1 << 4);
 1a8:	86 2f       	mov	r24, r22
 1aa:	8f 7a       	andi	r24, 0xAF	; 175
	USART0SendByte(digit);
 1ac:	80 62       	ori	r24, 0x20	; 32
 1ae:	0e 94 91 00 	call	0x122	; 0x122 <USART0SendByte>
	
	USART0SendByte(0x0A);
 1b2:	8a e0       	ldi	r24, 0x0A	; 10
 1b4:	0e 94 91 00 	call	0x122	; 0x122 <USART0SendByte>
}
 1b8:	df 91       	pop	r29
 1ba:	cf 91       	pop	r28
 1bc:	1f 91       	pop	r17
 1be:	ff 90       	pop	r15
 1c0:	ef 90       	pop	r14
 1c2:	df 90       	pop	r13
 1c4:	cf 90       	pop	r12
 1c6:	08 95       	ret

000001c8 <InitADC>:

void InitADC() {
	// Select Vref = AVcc
	ADMUX |= (1<<REFS0);
 1c8:	ec e7       	ldi	r30, 0x7C	; 124
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	80 81       	ld	r24, Z
 1ce:	80 64       	ori	r24, 0x40	; 64
 1d0:	80 83       	st	Z, r24
	
	//set prescaller to 128 and enable ADC
	ADCSRA |= (1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)|(1<<ADEN);
 1d2:	ea e7       	ldi	r30, 0x7A	; 122
 1d4:	f0 e0       	ldi	r31, 0x00	; 0
 1d6:	80 81       	ld	r24, Z
 1d8:	87 68       	ori	r24, 0x87	; 135
 1da:	80 83       	st	Z, r24
 1dc:	08 95       	ret

000001de <ReadADC>:
}

uint16_t ReadADC(uint8_t ADCchannel) {
	//select ADC channel with safety mask
	ADMUX = (ADMUX & 0xF0) | (ADCchannel & 0x0F);
 1de:	ec e7       	ldi	r30, 0x7C	; 124
 1e0:	f0 e0       	ldi	r31, 0x00	; 0
 1e2:	90 81       	ld	r25, Z
 1e4:	8f 70       	andi	r24, 0x0F	; 15
 1e6:	90 7f       	andi	r25, 0xF0	; 240
 1e8:	89 2b       	or	r24, r25
 1ea:	80 83       	st	Z, r24
	
	//single conversion mode
	ADCSRA |= (1<<ADSC);
 1ec:	ea e7       	ldi	r30, 0x7A	; 122
 1ee:	f0 e0       	ldi	r31, 0x00	; 0
 1f0:	80 81       	ld	r24, Z
 1f2:	80 64       	ori	r24, 0x40	; 64
 1f4:	80 83       	st	Z, r24
	
	// wait until ADC conversion is complete
	while( ADCSRA & (1<<ADSC) );
 1f6:	80 81       	ld	r24, Z
 1f8:	86 fd       	sbrc	r24, 6
 1fa:	fd cf       	rjmp	.-6      	; 0x1f6 <ReadADC+0x18>
	return ADC;
 1fc:	80 91 78 00 	lds	r24, 0x0078
 200:	90 91 79 00 	lds	r25, 0x0079
}
 204:	08 95       	ret

00000206 <ReadADCAverage>:

uint16_t ReadADCAverage(uint8_t ADCchannel) {
 206:	8f 92       	push	r8
 208:	9f 92       	push	r9
 20a:	af 92       	push	r10
 20c:	bf 92       	push	r11
 20e:	cf 93       	push	r28
 210:	df 93       	push	r29
 212:	d8 2f       	mov	r29, r24
 214:	c3 e1       	ldi	r28, 0x13	; 19
	double value = 0x00000000;
 216:	81 2c       	mov	r8, r1
 218:	91 2c       	mov	r9, r1
 21a:	54 01       	movw	r10, r8
	uint8_t i;
	// Approximating 19 successive ADC Readings
	for (i = 0; i < 19; i++) {
		value += pow((ReadADC(ADCchannel)),(double)2);
 21c:	8d 2f       	mov	r24, r29
 21e:	0e 94 ef 00 	call	0x1de	; 0x1de <ReadADC>
 222:	bc 01       	movw	r22, r24
 224:	80 e0       	ldi	r24, 0x00	; 0
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	0e 94 63 02 	call	0x4c6	; 0x4c6 <__floatunsisf>
 22c:	9b 01       	movw	r18, r22
 22e:	ac 01       	movw	r20, r24
 230:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__mulsf3>
 234:	9b 01       	movw	r18, r22
 236:	ac 01       	movw	r20, r24
 238:	c5 01       	movw	r24, r10
 23a:	b4 01       	movw	r22, r8
 23c:	0e 94 56 01 	call	0x2ac	; 0x2ac <__addsf3>
 240:	4b 01       	movw	r8, r22
 242:	5c 01       	movw	r10, r24
 244:	c1 50       	subi	r28, 0x01	; 1

uint16_t ReadADCAverage(uint8_t ADCchannel) {
	double value = 0x00000000;
	uint8_t i;
	// Approximating 19 successive ADC Readings
	for (i = 0; i < 19; i++) {
 246:	51 f7       	brne	.-44     	; 0x21c <ReadADCAverage+0x16>
		value += pow((ReadADC(ADCchannel)),(double)2);
	}
	value /= 19;
 248:	20 e0       	ldi	r18, 0x00	; 0
 24a:	30 e0       	ldi	r19, 0x00	; 0
 24c:	48 e9       	ldi	r20, 0x98	; 152
 24e:	51 e4       	ldi	r21, 0x41	; 65
 250:	0e 94 c2 01 	call	0x384	; 0x384 <__divsf3>
	value = pow((value),(double)1/2);
 254:	20 e0       	ldi	r18, 0x00	; 0
 256:	30 e0       	ldi	r19, 0x00	; 0
 258:	40 e0       	ldi	r20, 0x00	; 0
 25a:	5f e3       	ldi	r21, 0x3F	; 63
 25c:	0e 94 5e 03 	call	0x6bc	; 0x6bc <pow>
	return (uint16_t)value;
 260:	0e 94 34 02 	call	0x468	; 0x468 <__fixunssfsi>
}
 264:	cb 01       	movw	r24, r22
 266:	df 91       	pop	r29
 268:	cf 91       	pop	r28
 26a:	bf 90       	pop	r11
 26c:	af 90       	pop	r10
 26e:	9f 90       	pop	r9
 270:	8f 90       	pop	r8
 272:	08 95       	ret

00000274 <main>:

int main() {
	double potval;
	
	InitADC();	
 274:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <InitADC>
	USART0Init();
 278:	0e 94 81 00 	call	0x102	; 0x102 <USART0Init>
	
	while(1) {
		potval=(double)POT/1024*ReadADCAverage(0);
 27c:	80 e0       	ldi	r24, 0x00	; 0
 27e:	0e 94 03 01 	call	0x206	; 0x206 <ReadADCAverage>
 282:	bc 01       	movw	r22, r24
 284:	80 e0       	ldi	r24, 0x00	; 0
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	0e 94 63 02 	call	0x4c6	; 0x4c6 <__floatunsisf>
 28c:	20 e0       	ldi	r18, 0x00	; 0
 28e:	30 e0       	ldi	r19, 0x00	; 0
 290:	48 e4       	ldi	r20, 0x48	; 72
 292:	5d e3       	ldi	r21, 0x3D	; 61
 294:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__mulsf3>
		USART0TransmitNumber(potval);
 298:	0e 94 9b 00 	call	0x136	; 0x136 <USART0TransmitNumber>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 29c:	8f e1       	ldi	r24, 0x1F	; 31
 29e:	9e e4       	ldi	r25, 0x4E	; 78
 2a0:	01 97       	sbiw	r24, 0x01	; 1
 2a2:	f1 f7       	brne	.-4      	; 0x2a0 <main+0x2c>
 2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <main+0x32>
 2a6:	00 00       	nop
 2a8:	e9 cf       	rjmp	.-46     	; 0x27c <main+0x8>

000002aa <__subsf3>:
 2aa:	50 58       	subi	r21, 0x80	; 128

000002ac <__addsf3>:
 2ac:	bb 27       	eor	r27, r27
 2ae:	aa 27       	eor	r26, r26
 2b0:	0e 94 6d 01 	call	0x2da	; 0x2da <__addsf3x>
 2b4:	0c 94 b7 02 	jmp	0x56e	; 0x56e <__fp_round>
 2b8:	0e 94 a9 02 	call	0x552	; 0x552 <__fp_pscA>
 2bc:	38 f0       	brcs	.+14     	; 0x2cc <__addsf3+0x20>
 2be:	0e 94 b0 02 	call	0x560	; 0x560 <__fp_pscB>
 2c2:	20 f0       	brcs	.+8      	; 0x2cc <__addsf3+0x20>
 2c4:	39 f4       	brne	.+14     	; 0x2d4 <__addsf3+0x28>
 2c6:	9f 3f       	cpi	r25, 0xFF	; 255
 2c8:	19 f4       	brne	.+6      	; 0x2d0 <__addsf3+0x24>
 2ca:	26 f4       	brtc	.+8      	; 0x2d4 <__addsf3+0x28>
 2cc:	0c 94 a6 02 	jmp	0x54c	; 0x54c <__fp_nan>
 2d0:	0e f4       	brtc	.+2      	; 0x2d4 <__addsf3+0x28>
 2d2:	e0 95       	com	r30
 2d4:	e7 fb       	bst	r30, 7
 2d6:	0c 94 a0 02 	jmp	0x540	; 0x540 <__fp_inf>

000002da <__addsf3x>:
 2da:	e9 2f       	mov	r30, r25
 2dc:	0e 94 c8 02 	call	0x590	; 0x590 <__fp_split3>
 2e0:	58 f3       	brcs	.-42     	; 0x2b8 <__addsf3+0xc>
 2e2:	ba 17       	cp	r27, r26
 2e4:	62 07       	cpc	r22, r18
 2e6:	73 07       	cpc	r23, r19
 2e8:	84 07       	cpc	r24, r20
 2ea:	95 07       	cpc	r25, r21
 2ec:	20 f0       	brcs	.+8      	; 0x2f6 <__addsf3x+0x1c>
 2ee:	79 f4       	brne	.+30     	; 0x30e <__addsf3x+0x34>
 2f0:	a6 f5       	brtc	.+104    	; 0x35a <__addsf3x+0x80>
 2f2:	0c 94 ea 02 	jmp	0x5d4	; 0x5d4 <__fp_zero>
 2f6:	0e f4       	brtc	.+2      	; 0x2fa <__addsf3x+0x20>
 2f8:	e0 95       	com	r30
 2fa:	0b 2e       	mov	r0, r27
 2fc:	ba 2f       	mov	r27, r26
 2fe:	a0 2d       	mov	r26, r0
 300:	0b 01       	movw	r0, r22
 302:	b9 01       	movw	r22, r18
 304:	90 01       	movw	r18, r0
 306:	0c 01       	movw	r0, r24
 308:	ca 01       	movw	r24, r20
 30a:	a0 01       	movw	r20, r0
 30c:	11 24       	eor	r1, r1
 30e:	ff 27       	eor	r31, r31
 310:	59 1b       	sub	r21, r25
 312:	99 f0       	breq	.+38     	; 0x33a <__addsf3x+0x60>
 314:	59 3f       	cpi	r21, 0xF9	; 249
 316:	50 f4       	brcc	.+20     	; 0x32c <__addsf3x+0x52>
 318:	50 3e       	cpi	r21, 0xE0	; 224
 31a:	68 f1       	brcs	.+90     	; 0x376 <__addsf3x+0x9c>
 31c:	1a 16       	cp	r1, r26
 31e:	f0 40       	sbci	r31, 0x00	; 0
 320:	a2 2f       	mov	r26, r18
 322:	23 2f       	mov	r18, r19
 324:	34 2f       	mov	r19, r20
 326:	44 27       	eor	r20, r20
 328:	58 5f       	subi	r21, 0xF8	; 248
 32a:	f3 cf       	rjmp	.-26     	; 0x312 <__addsf3x+0x38>
 32c:	46 95       	lsr	r20
 32e:	37 95       	ror	r19
 330:	27 95       	ror	r18
 332:	a7 95       	ror	r26
 334:	f0 40       	sbci	r31, 0x00	; 0
 336:	53 95       	inc	r21
 338:	c9 f7       	brne	.-14     	; 0x32c <__addsf3x+0x52>
 33a:	7e f4       	brtc	.+30     	; 0x35a <__addsf3x+0x80>
 33c:	1f 16       	cp	r1, r31
 33e:	ba 0b       	sbc	r27, r26
 340:	62 0b       	sbc	r22, r18
 342:	73 0b       	sbc	r23, r19
 344:	84 0b       	sbc	r24, r20
 346:	ba f0       	brmi	.+46     	; 0x376 <__addsf3x+0x9c>
 348:	91 50       	subi	r25, 0x01	; 1
 34a:	a1 f0       	breq	.+40     	; 0x374 <__addsf3x+0x9a>
 34c:	ff 0f       	add	r31, r31
 34e:	bb 1f       	adc	r27, r27
 350:	66 1f       	adc	r22, r22
 352:	77 1f       	adc	r23, r23
 354:	88 1f       	adc	r24, r24
 356:	c2 f7       	brpl	.-16     	; 0x348 <__addsf3x+0x6e>
 358:	0e c0       	rjmp	.+28     	; 0x376 <__addsf3x+0x9c>
 35a:	ba 0f       	add	r27, r26
 35c:	62 1f       	adc	r22, r18
 35e:	73 1f       	adc	r23, r19
 360:	84 1f       	adc	r24, r20
 362:	48 f4       	brcc	.+18     	; 0x376 <__addsf3x+0x9c>
 364:	87 95       	ror	r24
 366:	77 95       	ror	r23
 368:	67 95       	ror	r22
 36a:	b7 95       	ror	r27
 36c:	f7 95       	ror	r31
 36e:	9e 3f       	cpi	r25, 0xFE	; 254
 370:	08 f0       	brcs	.+2      	; 0x374 <__addsf3x+0x9a>
 372:	b0 cf       	rjmp	.-160    	; 0x2d4 <__addsf3+0x28>
 374:	93 95       	inc	r25
 376:	88 0f       	add	r24, r24
 378:	08 f0       	brcs	.+2      	; 0x37c <__addsf3x+0xa2>
 37a:	99 27       	eor	r25, r25
 37c:	ee 0f       	add	r30, r30
 37e:	97 95       	ror	r25
 380:	87 95       	ror	r24
 382:	08 95       	ret

00000384 <__divsf3>:
 384:	0e 94 d6 01 	call	0x3ac	; 0x3ac <__divsf3x>
 388:	0c 94 b7 02 	jmp	0x56e	; 0x56e <__fp_round>
 38c:	0e 94 b0 02 	call	0x560	; 0x560 <__fp_pscB>
 390:	58 f0       	brcs	.+22     	; 0x3a8 <__divsf3+0x24>
 392:	0e 94 a9 02 	call	0x552	; 0x552 <__fp_pscA>
 396:	40 f0       	brcs	.+16     	; 0x3a8 <__divsf3+0x24>
 398:	29 f4       	brne	.+10     	; 0x3a4 <__divsf3+0x20>
 39a:	5f 3f       	cpi	r21, 0xFF	; 255
 39c:	29 f0       	breq	.+10     	; 0x3a8 <__divsf3+0x24>
 39e:	0c 94 a0 02 	jmp	0x540	; 0x540 <__fp_inf>
 3a2:	51 11       	cpse	r21, r1
 3a4:	0c 94 eb 02 	jmp	0x5d6	; 0x5d6 <__fp_szero>
 3a8:	0c 94 a6 02 	jmp	0x54c	; 0x54c <__fp_nan>

000003ac <__divsf3x>:
 3ac:	0e 94 c8 02 	call	0x590	; 0x590 <__fp_split3>
 3b0:	68 f3       	brcs	.-38     	; 0x38c <__divsf3+0x8>

000003b2 <__divsf3_pse>:
 3b2:	99 23       	and	r25, r25
 3b4:	b1 f3       	breq	.-20     	; 0x3a2 <__divsf3+0x1e>
 3b6:	55 23       	and	r21, r21
 3b8:	91 f3       	breq	.-28     	; 0x39e <__divsf3+0x1a>
 3ba:	95 1b       	sub	r25, r21
 3bc:	55 0b       	sbc	r21, r21
 3be:	bb 27       	eor	r27, r27
 3c0:	aa 27       	eor	r26, r26
 3c2:	62 17       	cp	r22, r18
 3c4:	73 07       	cpc	r23, r19
 3c6:	84 07       	cpc	r24, r20
 3c8:	38 f0       	brcs	.+14     	; 0x3d8 <__divsf3_pse+0x26>
 3ca:	9f 5f       	subi	r25, 0xFF	; 255
 3cc:	5f 4f       	sbci	r21, 0xFF	; 255
 3ce:	22 0f       	add	r18, r18
 3d0:	33 1f       	adc	r19, r19
 3d2:	44 1f       	adc	r20, r20
 3d4:	aa 1f       	adc	r26, r26
 3d6:	a9 f3       	breq	.-22     	; 0x3c2 <__divsf3_pse+0x10>
 3d8:	35 d0       	rcall	.+106    	; 0x444 <__divsf3_pse+0x92>
 3da:	0e 2e       	mov	r0, r30
 3dc:	3a f0       	brmi	.+14     	; 0x3ec <__divsf3_pse+0x3a>
 3de:	e0 e8       	ldi	r30, 0x80	; 128
 3e0:	32 d0       	rcall	.+100    	; 0x446 <__divsf3_pse+0x94>
 3e2:	91 50       	subi	r25, 0x01	; 1
 3e4:	50 40       	sbci	r21, 0x00	; 0
 3e6:	e6 95       	lsr	r30
 3e8:	00 1c       	adc	r0, r0
 3ea:	ca f7       	brpl	.-14     	; 0x3de <__divsf3_pse+0x2c>
 3ec:	2b d0       	rcall	.+86     	; 0x444 <__divsf3_pse+0x92>
 3ee:	fe 2f       	mov	r31, r30
 3f0:	29 d0       	rcall	.+82     	; 0x444 <__divsf3_pse+0x92>
 3f2:	66 0f       	add	r22, r22
 3f4:	77 1f       	adc	r23, r23
 3f6:	88 1f       	adc	r24, r24
 3f8:	bb 1f       	adc	r27, r27
 3fa:	26 17       	cp	r18, r22
 3fc:	37 07       	cpc	r19, r23
 3fe:	48 07       	cpc	r20, r24
 400:	ab 07       	cpc	r26, r27
 402:	b0 e8       	ldi	r27, 0x80	; 128
 404:	09 f0       	breq	.+2      	; 0x408 <__divsf3_pse+0x56>
 406:	bb 0b       	sbc	r27, r27
 408:	80 2d       	mov	r24, r0
 40a:	bf 01       	movw	r22, r30
 40c:	ff 27       	eor	r31, r31
 40e:	93 58       	subi	r25, 0x83	; 131
 410:	5f 4f       	sbci	r21, 0xFF	; 255
 412:	3a f0       	brmi	.+14     	; 0x422 <__divsf3_pse+0x70>
 414:	9e 3f       	cpi	r25, 0xFE	; 254
 416:	51 05       	cpc	r21, r1
 418:	78 f0       	brcs	.+30     	; 0x438 <__divsf3_pse+0x86>
 41a:	0c 94 a0 02 	jmp	0x540	; 0x540 <__fp_inf>
 41e:	0c 94 eb 02 	jmp	0x5d6	; 0x5d6 <__fp_szero>
 422:	5f 3f       	cpi	r21, 0xFF	; 255
 424:	e4 f3       	brlt	.-8      	; 0x41e <__divsf3_pse+0x6c>
 426:	98 3e       	cpi	r25, 0xE8	; 232
 428:	d4 f3       	brlt	.-12     	; 0x41e <__divsf3_pse+0x6c>
 42a:	86 95       	lsr	r24
 42c:	77 95       	ror	r23
 42e:	67 95       	ror	r22
 430:	b7 95       	ror	r27
 432:	f7 95       	ror	r31
 434:	9f 5f       	subi	r25, 0xFF	; 255
 436:	c9 f7       	brne	.-14     	; 0x42a <__divsf3_pse+0x78>
 438:	88 0f       	add	r24, r24
 43a:	91 1d       	adc	r25, r1
 43c:	96 95       	lsr	r25
 43e:	87 95       	ror	r24
 440:	97 f9       	bld	r25, 7
 442:	08 95       	ret
 444:	e1 e0       	ldi	r30, 0x01	; 1
 446:	66 0f       	add	r22, r22
 448:	77 1f       	adc	r23, r23
 44a:	88 1f       	adc	r24, r24
 44c:	bb 1f       	adc	r27, r27
 44e:	62 17       	cp	r22, r18
 450:	73 07       	cpc	r23, r19
 452:	84 07       	cpc	r24, r20
 454:	ba 07       	cpc	r27, r26
 456:	20 f0       	brcs	.+8      	; 0x460 <__divsf3_pse+0xae>
 458:	62 1b       	sub	r22, r18
 45a:	73 0b       	sbc	r23, r19
 45c:	84 0b       	sbc	r24, r20
 45e:	ba 0b       	sbc	r27, r26
 460:	ee 1f       	adc	r30, r30
 462:	88 f7       	brcc	.-30     	; 0x446 <__divsf3_pse+0x94>
 464:	e0 95       	com	r30
 466:	08 95       	ret

00000468 <__fixunssfsi>:
 468:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <__fp_splitA>
 46c:	88 f0       	brcs	.+34     	; 0x490 <__fixunssfsi+0x28>
 46e:	9f 57       	subi	r25, 0x7F	; 127
 470:	98 f0       	brcs	.+38     	; 0x498 <__fixunssfsi+0x30>
 472:	b9 2f       	mov	r27, r25
 474:	99 27       	eor	r25, r25
 476:	b7 51       	subi	r27, 0x17	; 23
 478:	b0 f0       	brcs	.+44     	; 0x4a6 <__fixunssfsi+0x3e>
 47a:	e1 f0       	breq	.+56     	; 0x4b4 <__fixunssfsi+0x4c>
 47c:	66 0f       	add	r22, r22
 47e:	77 1f       	adc	r23, r23
 480:	88 1f       	adc	r24, r24
 482:	99 1f       	adc	r25, r25
 484:	1a f0       	brmi	.+6      	; 0x48c <__fixunssfsi+0x24>
 486:	ba 95       	dec	r27
 488:	c9 f7       	brne	.-14     	; 0x47c <__fixunssfsi+0x14>
 48a:	14 c0       	rjmp	.+40     	; 0x4b4 <__fixunssfsi+0x4c>
 48c:	b1 30       	cpi	r27, 0x01	; 1
 48e:	91 f0       	breq	.+36     	; 0x4b4 <__fixunssfsi+0x4c>
 490:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <__fp_zero>
 494:	b1 e0       	ldi	r27, 0x01	; 1
 496:	08 95       	ret
 498:	0c 94 ea 02 	jmp	0x5d4	; 0x5d4 <__fp_zero>
 49c:	67 2f       	mov	r22, r23
 49e:	78 2f       	mov	r23, r24
 4a0:	88 27       	eor	r24, r24
 4a2:	b8 5f       	subi	r27, 0xF8	; 248
 4a4:	39 f0       	breq	.+14     	; 0x4b4 <__fixunssfsi+0x4c>
 4a6:	b9 3f       	cpi	r27, 0xF9	; 249
 4a8:	cc f3       	brlt	.-14     	; 0x49c <__fixunssfsi+0x34>
 4aa:	86 95       	lsr	r24
 4ac:	77 95       	ror	r23
 4ae:	67 95       	ror	r22
 4b0:	b3 95       	inc	r27
 4b2:	d9 f7       	brne	.-10     	; 0x4aa <__fixunssfsi+0x42>
 4b4:	3e f4       	brtc	.+14     	; 0x4c4 <__fixunssfsi+0x5c>
 4b6:	90 95       	com	r25
 4b8:	80 95       	com	r24
 4ba:	70 95       	com	r23
 4bc:	61 95       	neg	r22
 4be:	7f 4f       	sbci	r23, 0xFF	; 255
 4c0:	8f 4f       	sbci	r24, 0xFF	; 255
 4c2:	9f 4f       	sbci	r25, 0xFF	; 255
 4c4:	08 95       	ret

000004c6 <__floatunsisf>:
 4c6:	e8 94       	clt
 4c8:	09 c0       	rjmp	.+18     	; 0x4dc <__floatsisf+0x12>

000004ca <__floatsisf>:
 4ca:	97 fb       	bst	r25, 7
 4cc:	3e f4       	brtc	.+14     	; 0x4dc <__floatsisf+0x12>
 4ce:	90 95       	com	r25
 4d0:	80 95       	com	r24
 4d2:	70 95       	com	r23
 4d4:	61 95       	neg	r22
 4d6:	7f 4f       	sbci	r23, 0xFF	; 255
 4d8:	8f 4f       	sbci	r24, 0xFF	; 255
 4da:	9f 4f       	sbci	r25, 0xFF	; 255
 4dc:	99 23       	and	r25, r25
 4de:	a9 f0       	breq	.+42     	; 0x50a <__floatsisf+0x40>
 4e0:	f9 2f       	mov	r31, r25
 4e2:	96 e9       	ldi	r25, 0x96	; 150
 4e4:	bb 27       	eor	r27, r27
 4e6:	93 95       	inc	r25
 4e8:	f6 95       	lsr	r31
 4ea:	87 95       	ror	r24
 4ec:	77 95       	ror	r23
 4ee:	67 95       	ror	r22
 4f0:	b7 95       	ror	r27
 4f2:	f1 11       	cpse	r31, r1
 4f4:	f8 cf       	rjmp	.-16     	; 0x4e6 <__floatsisf+0x1c>
 4f6:	fa f4       	brpl	.+62     	; 0x536 <__floatsisf+0x6c>
 4f8:	bb 0f       	add	r27, r27
 4fa:	11 f4       	brne	.+4      	; 0x500 <__floatsisf+0x36>
 4fc:	60 ff       	sbrs	r22, 0
 4fe:	1b c0       	rjmp	.+54     	; 0x536 <__floatsisf+0x6c>
 500:	6f 5f       	subi	r22, 0xFF	; 255
 502:	7f 4f       	sbci	r23, 0xFF	; 255
 504:	8f 4f       	sbci	r24, 0xFF	; 255
 506:	9f 4f       	sbci	r25, 0xFF	; 255
 508:	16 c0       	rjmp	.+44     	; 0x536 <__floatsisf+0x6c>
 50a:	88 23       	and	r24, r24
 50c:	11 f0       	breq	.+4      	; 0x512 <__floatsisf+0x48>
 50e:	96 e9       	ldi	r25, 0x96	; 150
 510:	11 c0       	rjmp	.+34     	; 0x534 <__floatsisf+0x6a>
 512:	77 23       	and	r23, r23
 514:	21 f0       	breq	.+8      	; 0x51e <__floatsisf+0x54>
 516:	9e e8       	ldi	r25, 0x8E	; 142
 518:	87 2f       	mov	r24, r23
 51a:	76 2f       	mov	r23, r22
 51c:	05 c0       	rjmp	.+10     	; 0x528 <__floatsisf+0x5e>
 51e:	66 23       	and	r22, r22
 520:	71 f0       	breq	.+28     	; 0x53e <__floatsisf+0x74>
 522:	96 e8       	ldi	r25, 0x86	; 134
 524:	86 2f       	mov	r24, r22
 526:	70 e0       	ldi	r23, 0x00	; 0
 528:	60 e0       	ldi	r22, 0x00	; 0
 52a:	2a f0       	brmi	.+10     	; 0x536 <__floatsisf+0x6c>
 52c:	9a 95       	dec	r25
 52e:	66 0f       	add	r22, r22
 530:	77 1f       	adc	r23, r23
 532:	88 1f       	adc	r24, r24
 534:	da f7       	brpl	.-10     	; 0x52c <__floatsisf+0x62>
 536:	88 0f       	add	r24, r24
 538:	96 95       	lsr	r25
 53a:	87 95       	ror	r24
 53c:	97 f9       	bld	r25, 7
 53e:	08 95       	ret

00000540 <__fp_inf>:
 540:	97 f9       	bld	r25, 7
 542:	9f 67       	ori	r25, 0x7F	; 127
 544:	80 e8       	ldi	r24, 0x80	; 128
 546:	70 e0       	ldi	r23, 0x00	; 0
 548:	60 e0       	ldi	r22, 0x00	; 0
 54a:	08 95       	ret

0000054c <__fp_nan>:
 54c:	9f ef       	ldi	r25, 0xFF	; 255
 54e:	80 ec       	ldi	r24, 0xC0	; 192
 550:	08 95       	ret

00000552 <__fp_pscA>:
 552:	00 24       	eor	r0, r0
 554:	0a 94       	dec	r0
 556:	16 16       	cp	r1, r22
 558:	17 06       	cpc	r1, r23
 55a:	18 06       	cpc	r1, r24
 55c:	09 06       	cpc	r0, r25
 55e:	08 95       	ret

00000560 <__fp_pscB>:
 560:	00 24       	eor	r0, r0
 562:	0a 94       	dec	r0
 564:	12 16       	cp	r1, r18
 566:	13 06       	cpc	r1, r19
 568:	14 06       	cpc	r1, r20
 56a:	05 06       	cpc	r0, r21
 56c:	08 95       	ret

0000056e <__fp_round>:
 56e:	09 2e       	mov	r0, r25
 570:	03 94       	inc	r0
 572:	00 0c       	add	r0, r0
 574:	11 f4       	brne	.+4      	; 0x57a <__fp_round+0xc>
 576:	88 23       	and	r24, r24
 578:	52 f0       	brmi	.+20     	; 0x58e <__fp_round+0x20>
 57a:	bb 0f       	add	r27, r27
 57c:	40 f4       	brcc	.+16     	; 0x58e <__fp_round+0x20>
 57e:	bf 2b       	or	r27, r31
 580:	11 f4       	brne	.+4      	; 0x586 <__fp_round+0x18>
 582:	60 ff       	sbrs	r22, 0
 584:	04 c0       	rjmp	.+8      	; 0x58e <__fp_round+0x20>
 586:	6f 5f       	subi	r22, 0xFF	; 255
 588:	7f 4f       	sbci	r23, 0xFF	; 255
 58a:	8f 4f       	sbci	r24, 0xFF	; 255
 58c:	9f 4f       	sbci	r25, 0xFF	; 255
 58e:	08 95       	ret

00000590 <__fp_split3>:
 590:	57 fd       	sbrc	r21, 7
 592:	90 58       	subi	r25, 0x80	; 128
 594:	44 0f       	add	r20, r20
 596:	55 1f       	adc	r21, r21
 598:	59 f0       	breq	.+22     	; 0x5b0 <__fp_splitA+0x10>
 59a:	5f 3f       	cpi	r21, 0xFF	; 255
 59c:	71 f0       	breq	.+28     	; 0x5ba <__fp_splitA+0x1a>
 59e:	47 95       	ror	r20

000005a0 <__fp_splitA>:
 5a0:	88 0f       	add	r24, r24
 5a2:	97 fb       	bst	r25, 7
 5a4:	99 1f       	adc	r25, r25
 5a6:	61 f0       	breq	.+24     	; 0x5c0 <__fp_splitA+0x20>
 5a8:	9f 3f       	cpi	r25, 0xFF	; 255
 5aa:	79 f0       	breq	.+30     	; 0x5ca <__fp_splitA+0x2a>
 5ac:	87 95       	ror	r24
 5ae:	08 95       	ret
 5b0:	12 16       	cp	r1, r18
 5b2:	13 06       	cpc	r1, r19
 5b4:	14 06       	cpc	r1, r20
 5b6:	55 1f       	adc	r21, r21
 5b8:	f2 cf       	rjmp	.-28     	; 0x59e <__fp_split3+0xe>
 5ba:	46 95       	lsr	r20
 5bc:	f1 df       	rcall	.-30     	; 0x5a0 <__fp_splitA>
 5be:	08 c0       	rjmp	.+16     	; 0x5d0 <__fp_splitA+0x30>
 5c0:	16 16       	cp	r1, r22
 5c2:	17 06       	cpc	r1, r23
 5c4:	18 06       	cpc	r1, r24
 5c6:	99 1f       	adc	r25, r25
 5c8:	f1 cf       	rjmp	.-30     	; 0x5ac <__fp_splitA+0xc>
 5ca:	86 95       	lsr	r24
 5cc:	71 05       	cpc	r23, r1
 5ce:	61 05       	cpc	r22, r1
 5d0:	08 94       	sec
 5d2:	08 95       	ret

000005d4 <__fp_zero>:
 5d4:	e8 94       	clt

000005d6 <__fp_szero>:
 5d6:	bb 27       	eor	r27, r27
 5d8:	66 27       	eor	r22, r22
 5da:	77 27       	eor	r23, r23
 5dc:	cb 01       	movw	r24, r22
 5de:	97 f9       	bld	r25, 7
 5e0:	08 95       	ret

000005e2 <__mulsf3>:
 5e2:	0e 94 04 03 	call	0x608	; 0x608 <__mulsf3x>
 5e6:	0c 94 b7 02 	jmp	0x56e	; 0x56e <__fp_round>
 5ea:	0e 94 a9 02 	call	0x552	; 0x552 <__fp_pscA>
 5ee:	38 f0       	brcs	.+14     	; 0x5fe <__mulsf3+0x1c>
 5f0:	0e 94 b0 02 	call	0x560	; 0x560 <__fp_pscB>
 5f4:	20 f0       	brcs	.+8      	; 0x5fe <__mulsf3+0x1c>
 5f6:	95 23       	and	r25, r21
 5f8:	11 f0       	breq	.+4      	; 0x5fe <__mulsf3+0x1c>
 5fa:	0c 94 a0 02 	jmp	0x540	; 0x540 <__fp_inf>
 5fe:	0c 94 a6 02 	jmp	0x54c	; 0x54c <__fp_nan>
 602:	11 24       	eor	r1, r1
 604:	0c 94 eb 02 	jmp	0x5d6	; 0x5d6 <__fp_szero>

00000608 <__mulsf3x>:
 608:	0e 94 c8 02 	call	0x590	; 0x590 <__fp_split3>
 60c:	70 f3       	brcs	.-36     	; 0x5ea <__mulsf3+0x8>

0000060e <__mulsf3_pse>:
 60e:	95 9f       	mul	r25, r21
 610:	c1 f3       	breq	.-16     	; 0x602 <__mulsf3+0x20>
 612:	95 0f       	add	r25, r21
 614:	50 e0       	ldi	r21, 0x00	; 0
 616:	55 1f       	adc	r21, r21
 618:	62 9f       	mul	r22, r18
 61a:	f0 01       	movw	r30, r0
 61c:	72 9f       	mul	r23, r18
 61e:	bb 27       	eor	r27, r27
 620:	f0 0d       	add	r31, r0
 622:	b1 1d       	adc	r27, r1
 624:	63 9f       	mul	r22, r19
 626:	aa 27       	eor	r26, r26
 628:	f0 0d       	add	r31, r0
 62a:	b1 1d       	adc	r27, r1
 62c:	aa 1f       	adc	r26, r26
 62e:	64 9f       	mul	r22, r20
 630:	66 27       	eor	r22, r22
 632:	b0 0d       	add	r27, r0
 634:	a1 1d       	adc	r26, r1
 636:	66 1f       	adc	r22, r22
 638:	82 9f       	mul	r24, r18
 63a:	22 27       	eor	r18, r18
 63c:	b0 0d       	add	r27, r0
 63e:	a1 1d       	adc	r26, r1
 640:	62 1f       	adc	r22, r18
 642:	73 9f       	mul	r23, r19
 644:	b0 0d       	add	r27, r0
 646:	a1 1d       	adc	r26, r1
 648:	62 1f       	adc	r22, r18
 64a:	83 9f       	mul	r24, r19
 64c:	a0 0d       	add	r26, r0
 64e:	61 1d       	adc	r22, r1
 650:	22 1f       	adc	r18, r18
 652:	74 9f       	mul	r23, r20
 654:	33 27       	eor	r19, r19
 656:	a0 0d       	add	r26, r0
 658:	61 1d       	adc	r22, r1
 65a:	23 1f       	adc	r18, r19
 65c:	84 9f       	mul	r24, r20
 65e:	60 0d       	add	r22, r0
 660:	21 1d       	adc	r18, r1
 662:	82 2f       	mov	r24, r18
 664:	76 2f       	mov	r23, r22
 666:	6a 2f       	mov	r22, r26
 668:	11 24       	eor	r1, r1
 66a:	9f 57       	subi	r25, 0x7F	; 127
 66c:	50 40       	sbci	r21, 0x00	; 0
 66e:	9a f0       	brmi	.+38     	; 0x696 <__mulsf3_pse+0x88>
 670:	f1 f0       	breq	.+60     	; 0x6ae <__mulsf3_pse+0xa0>
 672:	88 23       	and	r24, r24
 674:	4a f0       	brmi	.+18     	; 0x688 <__mulsf3_pse+0x7a>
 676:	ee 0f       	add	r30, r30
 678:	ff 1f       	adc	r31, r31
 67a:	bb 1f       	adc	r27, r27
 67c:	66 1f       	adc	r22, r22
 67e:	77 1f       	adc	r23, r23
 680:	88 1f       	adc	r24, r24
 682:	91 50       	subi	r25, 0x01	; 1
 684:	50 40       	sbci	r21, 0x00	; 0
 686:	a9 f7       	brne	.-22     	; 0x672 <__mulsf3_pse+0x64>
 688:	9e 3f       	cpi	r25, 0xFE	; 254
 68a:	51 05       	cpc	r21, r1
 68c:	80 f0       	brcs	.+32     	; 0x6ae <__mulsf3_pse+0xa0>
 68e:	0c 94 a0 02 	jmp	0x540	; 0x540 <__fp_inf>
 692:	0c 94 eb 02 	jmp	0x5d6	; 0x5d6 <__fp_szero>
 696:	5f 3f       	cpi	r21, 0xFF	; 255
 698:	e4 f3       	brlt	.-8      	; 0x692 <__mulsf3_pse+0x84>
 69a:	98 3e       	cpi	r25, 0xE8	; 232
 69c:	d4 f3       	brlt	.-12     	; 0x692 <__mulsf3_pse+0x84>
 69e:	86 95       	lsr	r24
 6a0:	77 95       	ror	r23
 6a2:	67 95       	ror	r22
 6a4:	b7 95       	ror	r27
 6a6:	f7 95       	ror	r31
 6a8:	e7 95       	ror	r30
 6aa:	9f 5f       	subi	r25, 0xFF	; 255
 6ac:	c1 f7       	brne	.-16     	; 0x69e <__mulsf3_pse+0x90>
 6ae:	fe 2b       	or	r31, r30
 6b0:	88 0f       	add	r24, r24
 6b2:	91 1d       	adc	r25, r1
 6b4:	96 95       	lsr	r25
 6b6:	87 95       	ror	r24
 6b8:	97 f9       	bld	r25, 7
 6ba:	08 95       	ret

000006bc <pow>:
 6bc:	fa 01       	movw	r30, r20
 6be:	ee 0f       	add	r30, r30
 6c0:	ff 1f       	adc	r31, r31
 6c2:	30 96       	adiw	r30, 0x00	; 0
 6c4:	21 05       	cpc	r18, r1
 6c6:	31 05       	cpc	r19, r1
 6c8:	a1 f1       	breq	.+104    	; 0x732 <pow+0x76>
 6ca:	61 15       	cp	r22, r1
 6cc:	71 05       	cpc	r23, r1
 6ce:	61 f4       	brne	.+24     	; 0x6e8 <pow+0x2c>
 6d0:	80 38       	cpi	r24, 0x80	; 128
 6d2:	bf e3       	ldi	r27, 0x3F	; 63
 6d4:	9b 07       	cpc	r25, r27
 6d6:	49 f1       	breq	.+82     	; 0x72a <pow+0x6e>
 6d8:	68 94       	set
 6da:	90 38       	cpi	r25, 0x80	; 128
 6dc:	81 05       	cpc	r24, r1
 6de:	61 f0       	breq	.+24     	; 0x6f8 <pow+0x3c>
 6e0:	80 38       	cpi	r24, 0x80	; 128
 6e2:	bf ef       	ldi	r27, 0xFF	; 255
 6e4:	9b 07       	cpc	r25, r27
 6e6:	41 f0       	breq	.+16     	; 0x6f8 <pow+0x3c>
 6e8:	99 23       	and	r25, r25
 6ea:	4a f5       	brpl	.+82     	; 0x73e <pow+0x82>
 6ec:	ff 3f       	cpi	r31, 0xFF	; 255
 6ee:	e1 05       	cpc	r30, r1
 6f0:	31 05       	cpc	r19, r1
 6f2:	21 05       	cpc	r18, r1
 6f4:	19 f1       	breq	.+70     	; 0x73c <pow+0x80>
 6f6:	e8 94       	clt
 6f8:	08 94       	sec
 6fa:	e7 95       	ror	r30
 6fc:	d9 01       	movw	r26, r18
 6fe:	aa 23       	and	r26, r26
 700:	29 f4       	brne	.+10     	; 0x70c <pow+0x50>
 702:	ab 2f       	mov	r26, r27
 704:	be 2f       	mov	r27, r30
 706:	f8 5f       	subi	r31, 0xF8	; 248
 708:	d0 f3       	brcs	.-12     	; 0x6fe <pow+0x42>
 70a:	10 c0       	rjmp	.+32     	; 0x72c <pow+0x70>
 70c:	ff 5f       	subi	r31, 0xFF	; 255
 70e:	70 f4       	brcc	.+28     	; 0x72c <pow+0x70>
 710:	a6 95       	lsr	r26
 712:	e0 f7       	brcc	.-8      	; 0x70c <pow+0x50>
 714:	f7 39       	cpi	r31, 0x97	; 151
 716:	50 f0       	brcs	.+20     	; 0x72c <pow+0x70>
 718:	19 f0       	breq	.+6      	; 0x720 <pow+0x64>
 71a:	ff 3a       	cpi	r31, 0xAF	; 175
 71c:	38 f4       	brcc	.+14     	; 0x72c <pow+0x70>
 71e:	9f 77       	andi	r25, 0x7F	; 127
 720:	9f 93       	push	r25
 722:	0d d0       	rcall	.+26     	; 0x73e <pow+0x82>
 724:	0f 90       	pop	r0
 726:	07 fc       	sbrc	r0, 7
 728:	90 58       	subi	r25, 0x80	; 128
 72a:	08 95       	ret
 72c:	46 f0       	brts	.+16     	; 0x73e <pow+0x82>
 72e:	0c 94 a6 02 	jmp	0x54c	; 0x54c <__fp_nan>
 732:	60 e0       	ldi	r22, 0x00	; 0
 734:	70 e0       	ldi	r23, 0x00	; 0
 736:	80 e8       	ldi	r24, 0x80	; 128
 738:	9f e3       	ldi	r25, 0x3F	; 63
 73a:	08 95       	ret
 73c:	4f e7       	ldi	r20, 0x7F	; 127
 73e:	9f 77       	andi	r25, 0x7F	; 127
 740:	5f 93       	push	r21
 742:	4f 93       	push	r20
 744:	3f 93       	push	r19
 746:	2f 93       	push	r18
 748:	0e 94 59 04 	call	0x8b2	; 0x8b2 <log>
 74c:	2f 91       	pop	r18
 74e:	3f 91       	pop	r19
 750:	4f 91       	pop	r20
 752:	5f 91       	pop	r21
 754:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__mulsf3>
 758:	0c 94 b6 03 	jmp	0x76c	; 0x76c <exp>
 75c:	29 f4       	brne	.+10     	; 0x768 <pow+0xac>
 75e:	16 f0       	brts	.+4      	; 0x764 <pow+0xa8>
 760:	0c 94 a0 02 	jmp	0x540	; 0x540 <__fp_inf>
 764:	0c 94 ea 02 	jmp	0x5d4	; 0x5d4 <__fp_zero>
 768:	0c 94 a6 02 	jmp	0x54c	; 0x54c <__fp_nan>

0000076c <exp>:
 76c:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <__fp_splitA>
 770:	a8 f3       	brcs	.-22     	; 0x75c <pow+0xa0>
 772:	96 38       	cpi	r25, 0x86	; 134
 774:	a0 f7       	brcc	.-24     	; 0x75e <pow+0xa2>
 776:	07 f8       	bld	r0, 7
 778:	0f 92       	push	r0
 77a:	e8 94       	clt
 77c:	2b e3       	ldi	r18, 0x3B	; 59
 77e:	3a ea       	ldi	r19, 0xAA	; 170
 780:	48 eb       	ldi	r20, 0xB8	; 184
 782:	5f e7       	ldi	r21, 0x7F	; 127
 784:	0e 94 07 03 	call	0x60e	; 0x60e <__mulsf3_pse>
 788:	0f 92       	push	r0
 78a:	0f 92       	push	r0
 78c:	0f 92       	push	r0
 78e:	4d b7       	in	r20, 0x3d	; 61
 790:	5e b7       	in	r21, 0x3e	; 62
 792:	0f 92       	push	r0
 794:	0e 94 a1 04 	call	0x942	; 0x942 <modf>
 798:	e8 e6       	ldi	r30, 0x68	; 104
 79a:	f0 e0       	ldi	r31, 0x00	; 0
 79c:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__fp_powser>
 7a0:	4f 91       	pop	r20
 7a2:	5f 91       	pop	r21
 7a4:	ef 91       	pop	r30
 7a6:	ff 91       	pop	r31
 7a8:	e5 95       	asr	r30
 7aa:	ee 1f       	adc	r30, r30
 7ac:	ff 1f       	adc	r31, r31
 7ae:	49 f0       	breq	.+18     	; 0x7c2 <exp+0x56>
 7b0:	fe 57       	subi	r31, 0x7E	; 126
 7b2:	e0 68       	ori	r30, 0x80	; 128
 7b4:	44 27       	eor	r20, r20
 7b6:	ee 0f       	add	r30, r30
 7b8:	44 1f       	adc	r20, r20
 7ba:	fa 95       	dec	r31
 7bc:	e1 f7       	brne	.-8      	; 0x7b6 <exp+0x4a>
 7be:	41 95       	neg	r20
 7c0:	55 0b       	sbc	r21, r21
 7c2:	0e 94 1b 04 	call	0x836	; 0x836 <ldexp>
 7c6:	0f 90       	pop	r0
 7c8:	07 fe       	sbrs	r0, 7
 7ca:	0c 94 0f 04 	jmp	0x81e	; 0x81e <inverse>
 7ce:	08 95       	ret

000007d0 <__fp_powser>:
 7d0:	df 93       	push	r29
 7d2:	cf 93       	push	r28
 7d4:	1f 93       	push	r17
 7d6:	0f 93       	push	r16
 7d8:	ff 92       	push	r15
 7da:	ef 92       	push	r14
 7dc:	df 92       	push	r13
 7de:	7b 01       	movw	r14, r22
 7e0:	8c 01       	movw	r16, r24
 7e2:	68 94       	set
 7e4:	06 c0       	rjmp	.+12     	; 0x7f2 <__fp_powser+0x22>
 7e6:	da 2e       	mov	r13, r26
 7e8:	ef 01       	movw	r28, r30
 7ea:	0e 94 04 03 	call	0x608	; 0x608 <__mulsf3x>
 7ee:	fe 01       	movw	r30, r28
 7f0:	e8 94       	clt
 7f2:	a5 91       	lpm	r26, Z+
 7f4:	25 91       	lpm	r18, Z+
 7f6:	35 91       	lpm	r19, Z+
 7f8:	45 91       	lpm	r20, Z+
 7fa:	55 91       	lpm	r21, Z+
 7fc:	a6 f3       	brts	.-24     	; 0x7e6 <__fp_powser+0x16>
 7fe:	ef 01       	movw	r28, r30
 800:	0e 94 6d 01 	call	0x2da	; 0x2da <__addsf3x>
 804:	fe 01       	movw	r30, r28
 806:	97 01       	movw	r18, r14
 808:	a8 01       	movw	r20, r16
 80a:	da 94       	dec	r13
 80c:	69 f7       	brne	.-38     	; 0x7e8 <__fp_powser+0x18>
 80e:	df 90       	pop	r13
 810:	ef 90       	pop	r14
 812:	ff 90       	pop	r15
 814:	0f 91       	pop	r16
 816:	1f 91       	pop	r17
 818:	cf 91       	pop	r28
 81a:	df 91       	pop	r29
 81c:	08 95       	ret

0000081e <inverse>:
 81e:	9b 01       	movw	r18, r22
 820:	ac 01       	movw	r20, r24
 822:	60 e0       	ldi	r22, 0x00	; 0
 824:	70 e0       	ldi	r23, 0x00	; 0
 826:	80 e8       	ldi	r24, 0x80	; 128
 828:	9f e3       	ldi	r25, 0x3F	; 63
 82a:	0c 94 c2 01 	jmp	0x384	; 0x384 <__divsf3>
 82e:	0c 94 a0 02 	jmp	0x540	; 0x540 <__fp_inf>
 832:	0c 94 d5 04 	jmp	0x9aa	; 0x9aa <__fp_mpack>

00000836 <ldexp>:
 836:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <__fp_splitA>
 83a:	d8 f3       	brcs	.-10     	; 0x832 <inverse+0x14>
 83c:	99 23       	and	r25, r25
 83e:	c9 f3       	breq	.-14     	; 0x832 <inverse+0x14>
 840:	94 0f       	add	r25, r20
 842:	51 1d       	adc	r21, r1
 844:	a3 f3       	brvs	.-24     	; 0x82e <inverse+0x10>
 846:	91 50       	subi	r25, 0x01	; 1
 848:	50 40       	sbci	r21, 0x00	; 0
 84a:	94 f0       	brlt	.+36     	; 0x870 <ldexp+0x3a>
 84c:	59 f0       	breq	.+22     	; 0x864 <ldexp+0x2e>
 84e:	88 23       	and	r24, r24
 850:	32 f0       	brmi	.+12     	; 0x85e <ldexp+0x28>
 852:	66 0f       	add	r22, r22
 854:	77 1f       	adc	r23, r23
 856:	88 1f       	adc	r24, r24
 858:	91 50       	subi	r25, 0x01	; 1
 85a:	50 40       	sbci	r21, 0x00	; 0
 85c:	c1 f7       	brne	.-16     	; 0x84e <ldexp+0x18>
 85e:	9e 3f       	cpi	r25, 0xFE	; 254
 860:	51 05       	cpc	r21, r1
 862:	2c f7       	brge	.-54     	; 0x82e <inverse+0x10>
 864:	88 0f       	add	r24, r24
 866:	91 1d       	adc	r25, r1
 868:	96 95       	lsr	r25
 86a:	87 95       	ror	r24
 86c:	97 f9       	bld	r25, 7
 86e:	08 95       	ret
 870:	5f 3f       	cpi	r21, 0xFF	; 255
 872:	ac f0       	brlt	.+42     	; 0x89e <ldexp+0x68>
 874:	98 3e       	cpi	r25, 0xE8	; 232
 876:	9c f0       	brlt	.+38     	; 0x89e <ldexp+0x68>
 878:	bb 27       	eor	r27, r27
 87a:	86 95       	lsr	r24
 87c:	77 95       	ror	r23
 87e:	67 95       	ror	r22
 880:	b7 95       	ror	r27
 882:	08 f4       	brcc	.+2      	; 0x886 <ldexp+0x50>
 884:	b1 60       	ori	r27, 0x01	; 1
 886:	93 95       	inc	r25
 888:	c1 f7       	brne	.-16     	; 0x87a <ldexp+0x44>
 88a:	bb 0f       	add	r27, r27
 88c:	58 f7       	brcc	.-42     	; 0x864 <ldexp+0x2e>
 88e:	11 f4       	brne	.+4      	; 0x894 <ldexp+0x5e>
 890:	60 ff       	sbrs	r22, 0
 892:	e8 cf       	rjmp	.-48     	; 0x864 <ldexp+0x2e>
 894:	6f 5f       	subi	r22, 0xFF	; 255
 896:	7f 4f       	sbci	r23, 0xFF	; 255
 898:	8f 4f       	sbci	r24, 0xFF	; 255
 89a:	9f 4f       	sbci	r25, 0xFF	; 255
 89c:	e3 cf       	rjmp	.-58     	; 0x864 <ldexp+0x2e>
 89e:	0c 94 eb 02 	jmp	0x5d6	; 0x5d6 <__fp_szero>
 8a2:	16 f0       	brts	.+4      	; 0x8a8 <ldexp+0x72>
 8a4:	0c 94 d5 04 	jmp	0x9aa	; 0x9aa <__fp_mpack>
 8a8:	0c 94 a6 02 	jmp	0x54c	; 0x54c <__fp_nan>
 8ac:	68 94       	set
 8ae:	0c 94 a0 02 	jmp	0x540	; 0x540 <__fp_inf>

000008b2 <log>:
 8b2:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <__fp_splitA>
 8b6:	a8 f3       	brcs	.-22     	; 0x8a2 <ldexp+0x6c>
 8b8:	99 23       	and	r25, r25
 8ba:	c1 f3       	breq	.-16     	; 0x8ac <ldexp+0x76>
 8bc:	ae f3       	brts	.-22     	; 0x8a8 <ldexp+0x72>
 8be:	df 93       	push	r29
 8c0:	cf 93       	push	r28
 8c2:	1f 93       	push	r17
 8c4:	0f 93       	push	r16
 8c6:	ff 92       	push	r15
 8c8:	c9 2f       	mov	r28, r25
 8ca:	dd 27       	eor	r29, r29
 8cc:	88 23       	and	r24, r24
 8ce:	2a f0       	brmi	.+10     	; 0x8da <log+0x28>
 8d0:	21 97       	sbiw	r28, 0x01	; 1
 8d2:	66 0f       	add	r22, r22
 8d4:	77 1f       	adc	r23, r23
 8d6:	88 1f       	adc	r24, r24
 8d8:	da f7       	brpl	.-10     	; 0x8d0 <log+0x1e>
 8da:	20 e0       	ldi	r18, 0x00	; 0
 8dc:	30 e0       	ldi	r19, 0x00	; 0
 8de:	40 e8       	ldi	r20, 0x80	; 128
 8e0:	5f eb       	ldi	r21, 0xBF	; 191
 8e2:	9f e3       	ldi	r25, 0x3F	; 63
 8e4:	88 39       	cpi	r24, 0x98	; 152
 8e6:	20 f0       	brcs	.+8      	; 0x8f0 <log+0x3e>
 8e8:	80 3e       	cpi	r24, 0xE0	; 224
 8ea:	38 f0       	brcs	.+14     	; 0x8fa <log+0x48>
 8ec:	21 96       	adiw	r28, 0x01	; 1
 8ee:	8f 77       	andi	r24, 0x7F	; 127
 8f0:	0e 94 56 01 	call	0x2ac	; 0x2ac <__addsf3>
 8f4:	e0 e9       	ldi	r30, 0x90	; 144
 8f6:	f0 e0       	ldi	r31, 0x00	; 0
 8f8:	04 c0       	rjmp	.+8      	; 0x902 <__stack+0x3>
 8fa:	0e 94 56 01 	call	0x2ac	; 0x2ac <__addsf3>
 8fe:	ed eb       	ldi	r30, 0xBD	; 189
 900:	f0 e0       	ldi	r31, 0x00	; 0
 902:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__fp_powser>
 906:	8b 01       	movw	r16, r22
 908:	be 01       	movw	r22, r28
 90a:	ec 01       	movw	r28, r24
 90c:	fb 2e       	mov	r15, r27
 90e:	6f 57       	subi	r22, 0x7F	; 127
 910:	71 09       	sbc	r23, r1
 912:	75 95       	asr	r23
 914:	77 1f       	adc	r23, r23
 916:	88 0b       	sbc	r24, r24
 918:	99 0b       	sbc	r25, r25
 91a:	0e 94 65 02 	call	0x4ca	; 0x4ca <__floatsisf>
 91e:	28 e1       	ldi	r18, 0x18	; 24
 920:	32 e7       	ldi	r19, 0x72	; 114
 922:	41 e3       	ldi	r20, 0x31	; 49
 924:	5f e3       	ldi	r21, 0x3F	; 63
 926:	0e 94 04 03 	call	0x608	; 0x608 <__mulsf3x>
 92a:	af 2d       	mov	r26, r15
 92c:	98 01       	movw	r18, r16
 92e:	ae 01       	movw	r20, r28
 930:	ff 90       	pop	r15
 932:	0f 91       	pop	r16
 934:	1f 91       	pop	r17
 936:	cf 91       	pop	r28
 938:	df 91       	pop	r29
 93a:	0e 94 6d 01 	call	0x2da	; 0x2da <__addsf3x>
 93e:	0c 94 b7 02 	jmp	0x56e	; 0x56e <__fp_round>

00000942 <modf>:
 942:	fa 01       	movw	r30, r20
 944:	dc 01       	movw	r26, r24
 946:	aa 0f       	add	r26, r26
 948:	bb 1f       	adc	r27, r27
 94a:	9b 01       	movw	r18, r22
 94c:	ac 01       	movw	r20, r24
 94e:	bf 57       	subi	r27, 0x7F	; 127
 950:	28 f4       	brcc	.+10     	; 0x95c <modf+0x1a>
 952:	22 27       	eor	r18, r18
 954:	33 27       	eor	r19, r19
 956:	44 27       	eor	r20, r20
 958:	50 78       	andi	r21, 0x80	; 128
 95a:	20 c0       	rjmp	.+64     	; 0x99c <modf+0x5a>
 95c:	b7 51       	subi	r27, 0x17	; 23
 95e:	90 f4       	brcc	.+36     	; 0x984 <modf+0x42>
 960:	ab 2f       	mov	r26, r27
 962:	00 24       	eor	r0, r0
 964:	46 95       	lsr	r20
 966:	37 95       	ror	r19
 968:	27 95       	ror	r18
 96a:	01 1c       	adc	r0, r1
 96c:	a3 95       	inc	r26
 96e:	d2 f3       	brmi	.-12     	; 0x964 <modf+0x22>
 970:	00 20       	and	r0, r0
 972:	71 f0       	breq	.+28     	; 0x990 <modf+0x4e>
 974:	22 0f       	add	r18, r18
 976:	33 1f       	adc	r19, r19
 978:	44 1f       	adc	r20, r20
 97a:	b3 95       	inc	r27
 97c:	da f3       	brmi	.-10     	; 0x974 <modf+0x32>
 97e:	0e d0       	rcall	.+28     	; 0x99c <modf+0x5a>
 980:	0c 94 55 01 	jmp	0x2aa	; 0x2aa <__subsf3>
 984:	61 30       	cpi	r22, 0x01	; 1
 986:	71 05       	cpc	r23, r1
 988:	a0 e8       	ldi	r26, 0x80	; 128
 98a:	8a 07       	cpc	r24, r26
 98c:	b9 46       	sbci	r27, 0x69	; 105
 98e:	30 f4       	brcc	.+12     	; 0x99c <modf+0x5a>
 990:	9b 01       	movw	r18, r22
 992:	ac 01       	movw	r20, r24
 994:	66 27       	eor	r22, r22
 996:	77 27       	eor	r23, r23
 998:	88 27       	eor	r24, r24
 99a:	90 78       	andi	r25, 0x80	; 128
 99c:	30 96       	adiw	r30, 0x00	; 0
 99e:	21 f0       	breq	.+8      	; 0x9a8 <modf+0x66>
 9a0:	20 83       	st	Z, r18
 9a2:	31 83       	std	Z+1, r19	; 0x01
 9a4:	42 83       	std	Z+2, r20	; 0x02
 9a6:	53 83       	std	Z+3, r21	; 0x03
 9a8:	08 95       	ret

000009aa <__fp_mpack>:
 9aa:	9f 3f       	cpi	r25, 0xFF	; 255
 9ac:	31 f0       	breq	.+12     	; 0x9ba <__fp_mpack_finite+0xc>

000009ae <__fp_mpack_finite>:
 9ae:	91 50       	subi	r25, 0x01	; 1
 9b0:	20 f4       	brcc	.+8      	; 0x9ba <__fp_mpack_finite+0xc>
 9b2:	87 95       	ror	r24
 9b4:	77 95       	ror	r23
 9b6:	67 95       	ror	r22
 9b8:	b7 95       	ror	r27
 9ba:	88 0f       	add	r24, r24
 9bc:	91 1d       	adc	r25, r1
 9be:	96 95       	lsr	r25
 9c0:	87 95       	ror	r24
 9c2:	97 f9       	bld	r25, 7
 9c4:	08 95       	ret

000009c6 <_exit>:
 9c6:	f8 94       	cli

000009c8 <__stop_program>:
 9c8:	ff cf       	rjmp	.-2      	; 0x9c8 <__stop_program>
